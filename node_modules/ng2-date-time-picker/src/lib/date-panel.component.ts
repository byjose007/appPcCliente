/**
 * date-panel.component
 */

import {
    Component, OnInit, Input, Output, EventEmitter, ChangeDetectionStrategy
} from '@angular/core';
import * as moment from 'moment/moment';
import { Moment } from 'moment/moment';
import { DialogType } from './dialog.component';
import { PickerService } from './picker.service';

@Component({
    selector: 'dialog-date-panel',
    changeDetection: ChangeDetectionStrategy.OnPush,
    template: `<div class="yk-date-panel" [ngClass]="{
    'small-mode': mode === 'dropdown' || mode === 'inline',
    'theme-green': theme === 'green',
    'theme-teal': theme === 'teal',
    'theme-grape': theme === 'grape',
    'theme-cyan': theme === 'cyan',
    'theme-red': theme === 'red',
    'theme-gray': theme === 'gray'}"><div class="picker-control"><div class="picker-control-nav"><span class="nav-prev" (click)="prevMonth()"></span></div><div class="picker-control-content"><div class="content"><span class="month" (click)="toggleDialogType(2)">{{moment | moment: "MMMM"}}</span> <span class="year" (click)="toggleDialogType(3)">{{moment | moment: "YYYY"}}</span></div></div><div class="picker-control-nav"><span class="nav-next" (click)="nextMonth()"></span></div></div><div class="picker-calendar"><div [hidden]="dialogType !== 1" class="date"><div class="picker-calendar-row"><span class="picker-weekday" *ngFor="let day of dayNames">{{ day }}</span></div><div class="picker-calendar-row"><div class="picker-day" (click)="select(day)" [ngClass]="{
                               'out-focus': day.month() != moment.month(),
                               'today': day.isSame(now, 'day'),
                               'selected': selectedMoment && day.isSame(selectedMoment, 'day')
                              }" *ngFor="let day of calendarDays">{{ day | moment: 'D'}}</div></div></div><div [hidden]="dialogType !== 2" class="month"><div class="picker-calendar-row"><span class="picker-month" *ngFor="let month of monthList" [class.selected]="month === (moment | moment: 'MMM')" (click)="selectMonth(month)">{{month}}</span></div></div><div [hidden]="dialogType !== 3" class="year"><div class="picker-calendar-row"><span class="arrow-left" (click)="generateYearList('prev')"></span> <span class="picker-year" *ngFor="let year of yearList" [class.selected]="year.toString() === (moment | moment: 'YYYY')" (click)="selectYear(year)">{{year}} </span><span class="arrow-right" (click)="generateYearList('next')"></span></div></div></div><div class="picker-control footer" [class.hidden]="dialogType !== 1"><div class="picker-action action-today" (click)="selectToday()"><span class="text" i18n="Today button">Today</span></div><div class="picker-action action-close" (click)="cancelDialog()" [hidden]="mode === 'inline'"><span class="text">Close</span></div><div class="picker-action action-confirm" (click)="confirm()"><span class="text">Confirm</span></div></div></div>`,
    styles: [`*,::after,::before{-moz-box-sizing:border-box;box-sizing:border-box}:host.hidden{display:none}.yk-date-panel{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;width:100%;height:100%}.picker-control{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;height:40px;width:100%}.small-mode .picker-control{height:30px}.picker-control.footer{font-size:21.328px;line-height:40px;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-pack:center;-webkit-justify-content:center;-moz-box-pack:center;-ms-flex-pack:center;justify-content:center;height:80px;cursor:pointer}.small-mode .picker-control.footer{font-size:12px;line-height:20px;height:40px}.picker-control.footer.hidden{display:none}.picker-control.footer .picker-action{text-align:center;width:-webkit-calc(100% / 3);width:-moz-calc(100% / 3);width:calc(100% / 3)}.picker-control.footer .picker-action .text{padding-left:12.8px;padding-left:.8rem}.picker-control.footer .action-confirm{width:100%;color:#fff;background-color:#0070ba;-moz-border-radius:0 0 4px 4px;border-radius:0 0 4px 4px}.picker-control.footer .action-confirm:hover{background-color:#0061a1}.picker-control.footer .action-close::before,.picker-control.footer .action-confirm::before,.picker-control.footer .action-today::before{content:" ";position:relative;display:inline-block;height:0;width:0}.picker-control.footer .action-today::before{border-top:.66em solid #008fed;border-left:.66em solid transparent}.picker-control.footer .action-close::before{width:.8em;height:.8em;background:-webkit-linear-gradient(top,transparent 35%,#777 35%,#777 65%,transparent 65%),-webkit-linear-gradient(left,transparent 35%,#777 35%,#777 65%,transparent 65%);background:-moz-linear-gradient(top,transparent 35%,#777 35%,#777 65%,transparent 65%),-moz-linear-gradient(left,transparent 35%,#777 35%,#777 65%,transparent 65%);background:linear-gradient(to bottom,transparent 35%,#777 35%,#777 65%,transparent 65%),linear-gradient(to right,transparent 35%,#777 35%,#777 65%,transparent 65%);-webkit-transform:rotate(45deg);-moz-transform:rotate(45deg);-ms-transform:rotate(45deg);transform:rotate(45deg)}.picker-control.footer .action-confirm::before{width:.8em;height:.8em;-moz-border-radius:100%;border-radius:100%;background-color:#00b5ad}.picker-control-nav{position:relative;cursor:pointer;width:-webkit-calc(100% / 8);width:-moz-calc(100% / 8);width:calc(100% / 8)}.picker-control-nav>*{position:absolute;top:50%;right:auto;bottom:auto;left:50%;-webkit-transform:translate(-50%,-50%);-moz-transform:translate(-50%,-50%);-ms-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}.picker-control-nav .nav-next::before,.picker-control-nav .nav-prev::before{content:" ";border-top:.5em solid transparent;border-bottom:.5em solid transparent;border-right:.75em solid #000;width:0;height:0;display:block;margin:0 auto}.small-mode .picker-control-nav .nav-next::before,.small-mode .picker-control-nav .nav-prev::before{border-top:.4em solid transparent;border-bottom:.4em solid transparent;border-right:.6em solid #000}.picker-control-nav .nav-next::before{border-right:0;border-left:.75em solid #000}.small-mode .picker-control-nav .nav-next::before{border-right:0;border-left:.6em solid #000}.picker-control-content{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-moz-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;width:-webkit-calc(100% * 6 / 8);width:-moz-calc(100% * 6 / 8);width:calc(100% * 6 / 8);text-align:center}.picker-control-content .month,.picker-control-content .year{display:inline-block;cursor:pointer;-webkit-transition:-webkit-transform .2s ease;transition:-webkit-transform .2s ease;-moz-transition:transform .2s ease,-moz-transform .2s ease;transition:transform .2s ease;transition:transform .2s ease,-webkit-transform .2s ease,-moz-transform .2s ease}.picker-control-content .month:hover,.picker-control-content .year:hover{-webkit-transform:scale(1.2);-moz-transform:scale(1.2);-ms-transform:scale(1.2);transform:scale(1.2)}.picker-control-content .month{font-size:21.328px;line-height:40px;margin-right:8px;margin-right:.5rem;font-weight:700}.small-mode .picker-control-content .month{font-size:16px;line-height:20px}.picker-control-content .year{font-style:italic;color:#999}.small-mode .picker-control-content .year{font-size:12px;line-height:20px}.picker-calendar{-webkit-box-flex:1;-webkit-flex-grow:1;-moz-box-flex:1;-ms-flex-positive:1;flex-grow:1;width:100%}.picker-calendar .picker-calendar-row{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;width:100%;position:relative}.picker-calendar .picker-year{font-size:21.328px;line-height:40px;position:relative;height:40px;text-align:center;cursor:pointer;width:-webkit-calc(100% / 3);width:-moz-calc(100% / 3);width:calc(100% / 3)}.small-mode .picker-calendar .picker-year{font-size:12px;line-height:20px;height:20px}.picker-calendar .picker-year:hover{background:#87cfff}.picker-calendar .picker-year.selected{background:#0070ba;color:#fff}.picker-calendar .picker-month{font-size:21.328px;line-height:40px;position:relative;height:40px;text-align:center;cursor:pointer;width:-webkit-calc(100% / 4);width:-moz-calc(100% / 4);width:calc(100% / 4)}.small-mode .picker-calendar .picker-month{font-size:12px;line-height:20px;height:20px}.picker-calendar .picker-month:hover{background:#87cfff}.picker-calendar .picker-month.selected{background:#0070ba;color:#fff}.picker-calendar .picker-weekday{font-weight:700;text-align:left;color:#999;width:-webkit-calc(100% / 7);width:-moz-calc(100% / 7);width:calc(100% / 7);padding-left:10px}.small-mode .picker-calendar .picker-weekday{font-size:12px;line-height:20px;padding-left:3px}.picker-calendar .picker-day{font-size:21.328px;line-height:40px;position:relative;height:40px;text-align:center;cursor:pointer;width:-webkit-calc(100% / 7);width:-moz-calc(100% / 7);width:calc(100% / 7)}.small-mode .picker-calendar .picker-day{font-size:16px;line-height:20px;height:20px}.picker-calendar .picker-day:hover{background:#87cfff}.picker-calendar .picker-day.out-focus{color:#ddd}.picker-calendar .picker-day.out-focus:hover{color:#000}.picker-calendar .picker-day.selected{background:#0070ba;color:#fff}.picker-calendar .today::before{content:" ";position:absolute;top:2px;right:2px;width:0;height:0;border-top:.5em solid #008fed;border-left:.5em solid transparent}.picker-calendar .arrow-left,.picker-calendar .arrow-right{position:absolute;top:50%;width:16px;height:16px;-webkit-transform:translateY(-50%) scale(1);-moz-transform:translateY(-50%) scale(1);-ms-transform:translateY(-50%) scale(1);transform:translateY(-50%) scale(1);-webkit-transition:-webkit-transform .2s ease;transition:-webkit-transform .2s ease;-moz-transition:transform .2s ease,-moz-transform .2s ease;transition:transform .2s ease;transition:transform .2s ease,-webkit-transform .2s ease,-moz-transform .2s ease;z-index:9999;cursor:pointer;-moz-background-size:contain;background-size:contain}.picker-calendar .arrow-left:hover,.picker-calendar .arrow-right:hover{-webkit-transform:translateY(-50%) scale(1.5);-moz-transform:translateY(-50%) scale(1.5);-ms-transform:translateY(-50%) scale(1.5);transform:translateY(-50%) scale(1.5)}.picker-calendar .arrow-left{left:0;background-image:url(data:image/svg+xml;utf8;base64,PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iaXNvLTg4NTktMSI/Pgo8IS0tIEdlbmVyYXRvcjogQWRvYmUgSWxsdXN0cmF0b3IgMTguMS4xLCBTVkcgRXhwb3J0IFBsdWctSW4gLiBTVkcgVmVyc2lvbjogNi4wMCBCdWlsZCAwKSAgLS0+CjxzdmcgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIgdmVyc2lvbj0iMS4xIiBpZD0iQ2FwYV8xIiB4PSIwcHgiIHk9IjBweCIgdmlld0JveD0iMCAwIDI1MC43MzggMjUwLjczOCIgc3R5bGU9ImVuYWJsZS1iYWNrZ3JvdW5kOm5ldyAwIDAgMjUwLjczOCAyNTAuNzM4OyIgeG1sOnNwYWNlPSJwcmVzZXJ2ZSIgd2lkdGg9IjE2cHgiIGhlaWdodD0iMTZweCI+CjxnIGlkPSJSb3VuZGVkX1JlY3RhbmdsZV8zM19jb3B5XzRfMV8iPgoJPHBhdGggc3R5bGU9ImZpbGwtcnVsZTpldmVub2RkO2NsaXAtcnVsZTpldmVub2RkOyIgZD0iTTk2LjYzMywxMjUuMzY5bDk1LjA1My05NC41MzNjNy4xMDEtNy4wNTUsNy4xMDEtMTguNDkyLDAtMjUuNTQ2ICAgYy03LjEtNy4wNTQtMTguNjEzLTcuMDU0LTI1LjcxNCwwTDU4Ljk4OSwxMTEuNjg5Yy0zLjc4NCwzLjc1OS01LjQ4Nyw4Ljc1OS01LjIzOCwxMy42OGMtMC4yNDksNC45MjIsMS40NTQsOS45MjEsNS4yMzgsMTMuNjgxICAgbDEwNi45ODMsMTA2LjM5OGM3LjEwMSw3LjA1NSwxOC42MTMsNy4wNTUsMjUuNzE0LDBjNy4xMDEtNy4wNTQsNy4xMDEtMTguNDkxLDAtMjUuNTQ0TDk2LjYzMywxMjUuMzY5eiIgZmlsbD0iIzAwMDAwMCIvPgo8L2c+CjxnPgo8L2c+CjxnPgo8L2c+CjxnPgo8L2c+CjxnPgo8L2c+CjxnPgo8L2c+CjxnPgo8L2c+CjxnPgo8L2c+CjxnPgo8L2c+CjxnPgo8L2c+CjxnPgo8L2c+CjxnPgo8L2c+CjxnPgo8L2c+CjxnPgo8L2c+CjxnPgo8L2c+CjxnPgo8L2c+Cjwvc3ZnPgo=)}.picker-calendar .arrow-right{right:0;background-image:url(data:image/svg+xml;utf8;base64,PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iaXNvLTg4NTktMSI/Pgo8IS0tIEdlbmVyYXRvcjogQWRvYmUgSWxsdXN0cmF0b3IgMTguMS4xLCBTVkcgRXhwb3J0IFBsdWctSW4gLiBTVkcgVmVyc2lvbjogNi4wMCBCdWlsZCAwKSAgLS0+CjxzdmcgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIgdmVyc2lvbj0iMS4xIiBpZD0iQ2FwYV8xIiB4PSIwcHgiIHk9IjBweCIgdmlld0JveD0iMCAwIDI1MC43MzggMjUwLjczOCIgc3R5bGU9ImVuYWJsZS1iYWNrZ3JvdW5kOm5ldyAwIDAgMjUwLjczOCAyNTAuNzM4OyIgeG1sOnNwYWNlPSJwcmVzZXJ2ZSIgd2lkdGg9IjE2cHgiIGhlaWdodD0iMTZweCI+CjxnIGlkPSJSb3VuZGVkX1JlY3RhbmdsZV8zM19jb3B5XzQiPgoJPHBhdGggc3R5bGU9ImZpbGwtcnVsZTpldmVub2RkO2NsaXAtcnVsZTpldmVub2RkOyIgZD0iTTE5MS43NSwxMTEuNjg5TDg0Ljc2Niw1LjI5MWMtNy4xLTcuMDU1LTE4LjYxMy03LjA1NS0yNS43MTMsMCAgIGMtNy4xMDEsNy4wNTQtNy4xMDEsMTguNDksMCwyNS41NDRsOTUuMDUzLDk0LjUzNGwtOTUuMDUzLDk0LjUzM2MtNy4xMDEsNy4wNTQtNy4xMDEsMTguNDkxLDAsMjUuNTQ1ICAgYzcuMSw3LjA1NCwxOC42MTMsNy4wNTQsMjUuNzEzLDBMMTkxLjc1LDEzOS4wNWMzLjc4NC0zLjc1OSw1LjQ4Ny04Ljc1OSw1LjIzOC0xMy42ODEgICBDMTk3LjIzNywxMjAuNDQ3LDE5NS41MzQsMTE1LjQ0OCwxOTEuNzUsMTExLjY4OXoiIGZpbGw9IiMwMDAwMDAiLz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8L3N2Zz4K)}.theme-green .picker-control.footer .action-confirm{background-color:#2b8a3e}.theme-green .picker-control.footer .action-confirm:hover{background-color:#257735}.theme-green .picker-control.footer .action-today::before{border-top-color:#37b14f}.theme-green .picker-calendar .picker-day:hover,.theme-green .picker-calendar .picker-month:hover,.theme-green .picker-calendar .picker-year:hover{background:#a0e1ad}.theme-green .picker-calendar .picker-day.selected,.theme-green .picker-calendar .picker-month.selected,.theme-green .picker-calendar .picker-year.selected{background:#2b8a3e}.theme-green .picker-calendar .today::before{border-top-color:#37b14f}.theme-teal .picker-control.footer .action-confirm{background-color:#087f5b}.theme-teal .picker-control.footer .action-confirm:hover{background-color:#06674a}.theme-teal .picker-control.footer .action-today::before{border-top-color:#0baf7d}.theme-teal .picker-calendar .picker-day:hover,.theme-teal .picker-calendar .picker-month:hover,.theme-teal .picker-calendar .picker-year:hover{background:#5ef5c7}.theme-teal .picker-calendar .picker-day.selected,.theme-teal .picker-calendar .picker-month.selected,.theme-teal .picker-calendar .picker-year.selected{background:#087f5b}.theme-teal .picker-calendar .today::before{border-top-color:#0baf7d}.theme-cyan .picker-control.footer .action-confirm{background-color:#0b7285}.theme-cyan .picker-control.footer .action-confirm:hover{background-color:#095e6d}.theme-cyan .picker-control.footer .action-today::before{border-top-color:#0f9ab4}.theme-cyan .picker-calendar .picker-day:hover,.theme-cyan .picker-calendar .picker-month:hover,.theme-cyan .picker-calendar .picker-year:hover{background:#69ddf3}.theme-cyan .picker-calendar .picker-day.selected,.theme-cyan .picker-calendar .picker-month.selected,.theme-cyan .picker-calendar .picker-year.selected{background:#0b7285}.theme-cyan .picker-calendar .today::before{border-top-color:#0f9ab4}.theme-grape .picker-control.footer .action-confirm{background-color:#862e9c}.theme-grape .picker-control.footer .action-confirm:hover{background-color:#752888}.theme-grape .picker-control.footer .action-today::before{border-top-color:#a83ac3}.theme-grape .picker-calendar .picker-day:hover,.theme-grape .picker-calendar .picker-month:hover,.theme-grape .picker-calendar .picker-year:hover{background:#dcafe7}.theme-grape .picker-calendar .picker-day.selected,.theme-grape .picker-calendar .picker-month.selected,.theme-grape .picker-calendar .picker-year.selected{background:#862e9c}.theme-grape .picker-calendar .today::before{border-top-color:#a83ac3}.theme-red .picker-control.footer .action-confirm{background-color:#c92a2a}.theme-red .picker-control.footer .action-confirm:hover{background-color:#b42626}.theme-red .picker-control.footer .action-today::before{border-top-color:#da4c4c}.theme-red .picker-calendar .picker-day:hover,.theme-red .picker-calendar .picker-month:hover,.theme-red .picker-calendar .picker-year:hover{background:#f4cbcb}.theme-red .picker-calendar .picker-day.selected,.theme-red .picker-calendar .picker-month.selected,.theme-red .picker-calendar .picker-year.selected{background:#c92a2a}.theme-red .picker-calendar .today::before{border-top-color:#da4c4c}.theme-gray .picker-control.footer .action-confirm{background-color:#212529}.theme-gray .picker-control.footer .action-confirm:hover{background-color:#16181b}.theme-gray .picker-control.footer .action-today::before{border-top-color:#383f45}.theme-gray .picker-calendar .picker-day:hover,.theme-gray .picker-calendar .picker-month:hover,.theme-gray .picker-calendar .picker-year:hover{background:#7e8b98}.theme-gray .picker-calendar .picker-day.selected,.theme-gray .picker-calendar .picker-month.selected,.theme-gray .picker-calendar .picker-year.selected{background:#212529}.theme-gray .picker-calendar .today::before{border-top-color:#383f45}`],
})
export class DatePanelComponent implements OnInit {

    @Input() public selectedMoment: Moment;
    @Output() public onCancelDialog = new EventEmitter<boolean>();
    @Output() public onConfirm = new EventEmitter<boolean>();

    public theme: string;
    public dialogType: DialogType;
    public now: Moment;
    public moment: Moment;
    public calendarDays: Moment[];
    public dayNames: string[];
    public monthList: string[];
    public yearList: number[] = [];
    public mode: 'popup' | 'dropdown' | 'inline';

    private locale: string;

    constructor( private service: PickerService ) {
    }

    public ngOnInit() {

        this.locale = this.service.dtLocale;
        this.theme = this.service.dtTheme;
        this.dialogType = this.service.dtDialogType;
        this.mode = this.service.dtMode;

        // set moment locale (default is en)
        moment.locale(this.locale);

        // set week days name array
        this.dayNames = moment.weekdaysShort(true);
        // set month name array
        this.monthList = moment.monthsShort();

        this.now = moment();
        this.moment = this.service.moment;
        this.generateCalendar();
    }

    public prevMonth(): void {
        this.moment = this.moment.clone().subtract(1, 'M');
        this.generateCalendar();
    }

    public nextMonth(): void {
        this.moment = this.moment.clone().add(1, 'M');
        this.generateCalendar();
    }

    public selectMonth( month: string ): void {
        this.moment = this.moment.clone().month(month);
        this.generateCalendar();
        this.toggleDialogType(DialogType.Month);
        return;
    }

    public selectYear( year: number ): void {
        this.moment = this.moment.clone().year(year);
        this.generateCalendar();
        this.toggleDialogType(DialogType.Year);
        return;
    }

    public toggleDialogType( type: DialogType ): void {
        if (this.dialogType === type) {
            this.dialogType = DialogType.Date;
            return;
        }

        this.dialogType = type;
        if (type === DialogType.Year) {
            this.generateYearList();
        }
        return;
    }

    public generateYearList( param?: string ): void {
        let start;

        if (param === 'prev') {
            start = this.yearList[0] - 9;
        } else if (param === 'next') {
            start = this.yearList[8] + 1;
        } else {
            start = +this.moment.clone().subtract(4, 'y').format('YYYY');
        }

        for (let i = 0; i < 9; i++) {
            this.yearList[i] = start + i;
        }
        return;
    }

    public select( moment: Moment ): void {
        if (this.selectedMoment &&
            this.selectedMoment.clone().startOf('date') === moment) {
            return;
        }

        if (moment.year() !== this.moment.year() ||
            moment.month() !== this.moment.month()) {
            this.moment = moment.clone();
            this.generateCalendar();
        }
        this.service.setDate(moment);
    }

    public selectToday(): void {
        let moment = this.moment.clone()
            .year(this.now.year())
            .month(this.now.month())
            .dayOfYear(this.now.dayOfYear());
        this.service.setDate(moment);
    }

    public cancelDialog(): void {
        this.onCancelDialog.emit(true);
        return;
    }

    public confirm(): void {
        this.onConfirm.emit(true);
        return;
    }

    private generateCalendar(): void {
        this.calendarDays = [];
        let start = 0 - (this.moment.clone().startOf('month').day() + (7 - moment.localeData().firstDayOfWeek())) % 7;
        let end = 41 + start; // iterator ending point

        for (let i = start; i <= end; i += 1) {
            let day = this.moment.clone().startOf('month').add(i, 'days');
            this.calendarDays.push(day);
        }
    }
}

