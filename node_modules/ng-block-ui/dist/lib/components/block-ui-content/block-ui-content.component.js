"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
require("rxjs/add/operator/map");
var block_ui_instance_service_1 = require("../../services/block-ui-instance.service");
var block_ui_actions_constant_1 = require("../../constants/block-ui-actions.constant");
var block_ui_default_name_constant_1 = require("../../constants/block-ui-default-name.constant");
var block_ui_content_component_style_1 = require("./block-ui-content.component.style");
var block_ui_content_component_template_1 = require("./block-ui-content.component.template");
var BlockUIContentComponent = (function () {
    function BlockUIContentComponent(blockUI, resolver, changeDetectionRef) {
        this.blockUI = blockUI;
        this.resolver = resolver;
        this.changeDetectionRef = changeDetectionRef;
        this.name = block_ui_default_name_constant_1.BlockUIDefaultName;
        this.active = false;
    }
    BlockUIContentComponent.prototype.ngOnInit = function () {
        this.blockUISubscription = this.subscribeToBlockUI(this.blockUI.observe());
    };
    BlockUIContentComponent.prototype.ngAfterViewInit = function () {
        try {
            if (this.templateCmp) {
                if (this.templateCmp instanceof core_1.TemplateRef) {
                    this.templateOutlet.createEmbeddedView(this.templateCmp);
                }
                else {
                    var templateComp = this.resolver.resolveComponentFactory(this.templateCmp);
                    this.templateCompRef = this.templateOutlet.createComponent(templateComp);
                    this.updateBlockTemplate(this.message);
                }
            }
        }
        catch (error) {
            console.error('ng-block-ui:', error);
        }
    };
    BlockUIContentComponent.prototype.ngAfterViewChecked = function () {
        this.changeDetectionRef.detectChanges();
    };
    BlockUIContentComponent.prototype.subscribeToBlockUI = function (blockUI$) {
        var _this = this;
        return blockUI$
            .map(function (event) { return _this.onDispatchedEvent(event); })
            .subscribe();
    };
    BlockUIContentComponent.prototype.onDispatchedEvent = function (event) {
        switch (event.action) {
            case (block_ui_actions_constant_1.BlockUIActions.START):
            case (block_ui_actions_constant_1.BlockUIActions.UPDATE):
                this.onStart(event);
                break;
            case (block_ui_actions_constant_1.BlockUIActions.STOP):
            case (block_ui_actions_constant_1.BlockUIActions.RESET):
                this.onStop(event);
                break;
            case (block_ui_actions_constant_1.BlockUIActions.UNSUBSCRIBE):
                this.onStop(event);
                this.onUnsubscribe(event.name);
                break;
        }
    };
    BlockUIContentComponent.prototype.onStart = function (event) {
        if (event.name === this.name) {
            this.active = true;
            this.message = event.message;
            this.updateBlockTemplate(event.message);
        }
    };
    BlockUIContentComponent.prototype.onStop = function (event) {
        var name = event.name, action = event.action;
        if (name === this.name || action === block_ui_actions_constant_1.BlockUIActions.RESET) {
            this.active = false;
        }
    };
    BlockUIContentComponent.prototype.updateBlockTemplate = function (msg) {
        if (msg === void 0) { msg = this.defaultMessage; }
        if (this.templateCompRef && this.templateCompRef instanceof core_1.ComponentRef) {
            this.templateCompRef.instance.message = msg;
        }
    };
    BlockUIContentComponent.prototype.onUnsubscribe = function (name) {
        if (name === this.name) {
            this.blockUISubscription.unsubscribe();
        }
    };
    BlockUIContentComponent.prototype.ngOnDestroy = function () {
        this.onUnsubscribe(this.name);
    };
    return BlockUIContentComponent;
}());
BlockUIContentComponent.decorators = [
    { type: core_1.Component, args: [{
                selector: 'block-ui-content',
                template: block_ui_content_component_template_1.template,
                styles: [block_ui_content_component_style_1.styles],
                encapsulation: core_1.ViewEncapsulation.None
            },] },
];
/** @nocollapse */
BlockUIContentComponent.ctorParameters = function () { return [
    { type: block_ui_instance_service_1.BlockUIInstanceService, },
    { type: core_1.ComponentFactoryResolver, },
    { type: core_1.ChangeDetectorRef, },
]; };
BlockUIContentComponent.propDecorators = {
    'name': [{ type: core_1.Input },],
    'defaultMessage': [{ type: core_1.Input, args: ['message',] },],
    'templateCmp': [{ type: core_1.Input, args: ['template',] },],
    'templateOutlet': [{ type: core_1.ViewChild, args: ['templateOutlet', { read: core_1.ViewContainerRef },] },],
};
exports.BlockUIContentComponent = BlockUIContentComponent;
